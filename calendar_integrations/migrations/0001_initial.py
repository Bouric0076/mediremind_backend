# Generated by Django 5.2.5 on 2025-09-23 11:59

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="CalendarIntegration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "provider",
                    models.CharField(
                        choices=[
                            ("google", "Google Calendar"),
                            ("outlook", "Microsoft Outlook"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "calendar_id",
                    models.CharField(help_text="External calendar ID", max_length=255),
                ),
                (
                    "calendar_name",
                    models.CharField(default="Primary Calendar", max_length=255),
                ),
                ("access_token", models.TextField()),
                ("refresh_token", models.TextField(blank=True, null=True)),
                ("token_expiry", models.DateTimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("error", "Error"),
                            ("pending", "Pending Setup"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("sync_enabled", models.BooleanField(default=True)),
                ("last_sync_at", models.DateTimeField(blank=True, null=True)),
                ("next_sync_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="calendar_integrations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "unique_together": {("user", "provider", "calendar_id")},
            },
        ),
        migrations.CreateModel(
            name="CalendarSyncLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sync_type",
                    models.CharField(
                        choices=[
                            ("full", "Full Sync"),
                            ("incremental", "Incremental Sync"),
                        ],
                        default="incremental",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("success", "Success"),
                            ("failed", "Failed"),
                            ("partial", "Partial Success"),
                        ],
                        max_length=20,
                    ),
                ),
                ("events_processed", models.IntegerField(default=0)),
                ("events_created", models.IntegerField(default=0)),
                ("events_updated", models.IntegerField(default=0)),
                ("conflicts_detected", models.IntegerField(default=0)),
                ("started_at", models.DateTimeField()),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("duration_seconds", models.FloatField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True)),
                (
                    "integration",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sync_logs",
                        to="calendar_integrations.calendarintegration",
                    ),
                ),
            ],
            options={
                "ordering": ["-started_at"],
            },
        ),
        migrations.CreateModel(
            name="ExternalCalendarEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "external_event_id",
                    models.CharField(
                        help_text="ID from external calendar", max_length=255
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                ("start_time", models.DateTimeField()),
                ("end_time", models.DateTimeField()),
                ("location", models.CharField(blank=True, max_length=255)),
                ("is_medical_appointment", models.BooleanField(default=False)),
                ("last_modified", models.DateTimeField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "integration",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="events",
                        to="calendar_integrations.calendarintegration",
                    ),
                ),
            ],
            options={
                "ordering": ["start_time"],
                "unique_together": {("integration", "external_event_id")},
            },
        ),
        migrations.CreateModel(
            name="CalendarConflict",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "conflict_type",
                    models.CharField(
                        choices=[
                            ("overlap", "Time Overlap"),
                            ("duplicate", "Duplicate Event"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "mediremind_appointment_id",
                    models.CharField(blank=True, max_length=255),
                ),
                ("conflict_details", models.JSONField(default=dict)),
                ("is_resolved", models.BooleanField(default=False)),
                ("resolution_action", models.CharField(blank=True, max_length=50)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "integration",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="conflicts",
                        to="calendar_integrations.calendarintegration",
                    ),
                ),
                (
                    "external_event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="calendar_integrations.externalcalendarevent",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="CalendarAvailability",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("start_time", models.TimeField()),
                ("end_time", models.TimeField()),
                ("is_available", models.BooleanField(default=True)),
                (
                    "availability_type",
                    models.CharField(
                        choices=[
                            ("free", "Free"),
                            ("busy", "Busy"),
                            ("tentative", "Tentative"),
                        ],
                        default="free",
                        max_length=20,
                    ),
                ),
                ("calculated_at", models.DateTimeField(auto_now_add=True)),
                (
                    "integration",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="availability",
                        to="calendar_integrations.calendarintegration",
                    ),
                ),
            ],
            options={
                "ordering": ["date", "start_time"],
                "unique_together": {("integration", "date", "start_time", "end_time")},
            },
        ),
    ]
