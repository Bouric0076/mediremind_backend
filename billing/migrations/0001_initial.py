# Generated by Django 5.2.5 on 2025-09-23 11:59

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("accounts", "0002_initial"),
        ("appointments", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="InsuranceProvider",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("code", models.CharField(max_length=20, unique=True)),
                ("address", models.TextField(blank=True)),
                ("phone", models.CharField(blank=True, max_length=20)),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("website", models.URLField(blank=True)),
                ("claims_address", models.TextField(blank=True)),
                ("claims_phone", models.CharField(blank=True, max_length=20)),
                ("claims_email", models.EmailField(blank=True, max_length=254)),
                ("electronic_claims_id", models.CharField(blank=True, max_length=50)),
                ("contract_start_date", models.DateField(blank=True, null=True)),
                ("contract_end_date", models.DateField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("payment_terms_days", models.PositiveIntegerField(default=30)),
                ("requires_prior_authorization", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "insurance_providers",
                "ordering": ["name"],
                "indexes": [
                    models.Index(fields=["name"], name="insurance_p_name_dda073_idx"),
                    models.Index(fields=["code"], name="insurance_p_code_3033f3_idx"),
                    models.Index(
                        fields=["is_active"], name="insurance_p_is_acti_6ed3fc_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Invoice",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("invoice_number", models.CharField(max_length=50, unique=True)),
                ("invoice_date", models.DateField()),
                ("due_date", models.DateField()),
                ("service_date", models.DateField()),
                (
                    "subtotal",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                (
                    "tax_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                (
                    "discount_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                (
                    "total_amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                (
                    "amount_paid",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                (
                    "amount_due",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("pending", "Pending"),
                            ("sent", "Sent"),
                            ("paid", "Paid"),
                            ("partially_paid", "Partially Paid"),
                            ("overdue", "Overdue"),
                            ("cancelled", "Cancelled"),
                            ("refunded", "Refunded"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                (
                    "payment_status",
                    models.CharField(
                        choices=[
                            ("unpaid", "Unpaid"),
                            ("partial", "Partially Paid"),
                            ("paid", "Paid in Full"),
                            ("overpaid", "Overpaid"),
                            ("refunded", "Refunded"),
                        ],
                        default="unpaid",
                        max_length=20,
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                ("internal_notes", models.TextField(blank=True)),
                ("sent_at", models.DateTimeField(blank=True, null=True)),
                ("paid_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "appointment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="invoices",
                        to="appointments.appointment",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="invoices",
                        to="accounts.enhancedpatient",
                    ),
                ),
            ],
            options={
                "db_table": "invoices",
                "ordering": ["-invoice_date"],
            },
        ),
        migrations.CreateModel(
            name="InsuranceClaim",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("claim_number", models.CharField(max_length=50, unique=True)),
                (
                    "claim_type",
                    models.CharField(
                        choices=[
                            ("primary", "Primary Insurance"),
                            ("secondary", "Secondary Insurance"),
                            ("tertiary", "Tertiary Insurance"),
                        ],
                        max_length=20,
                    ),
                ),
                ("service_date", models.DateField()),
                ("submission_date", models.DateField()),
                (
                    "billed_amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                (
                    "approved_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                (
                    "paid_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                (
                    "patient_responsibility",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("submitted", "Submitted"),
                            ("pending", "Pending Review"),
                            ("approved", "Approved"),
                            ("partially_approved", "Partially Approved"),
                            ("denied", "Denied"),
                            ("paid", "Paid"),
                            ("appealed", "Under Appeal"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                ("denial_reason", models.TextField(blank=True)),
                ("policy_number", models.CharField(max_length=100)),
                ("group_number", models.CharField(blank=True, max_length=100)),
                ("authorization_number", models.CharField(blank=True, max_length=100)),
                ("processed_date", models.DateField(blank=True, null=True)),
                ("payment_date", models.DateField(blank=True, null=True)),
                ("notes", models.TextField(blank=True)),
                ("internal_notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="insurance_claims",
                        to="accounts.enhancedpatient",
                    ),
                ),
                (
                    "insurance_provider",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="claims",
                        to="billing.insuranceprovider",
                    ),
                ),
                (
                    "invoice",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="insurance_claims",
                        to="billing.invoice",
                    ),
                ),
            ],
            options={
                "db_table": "insurance_claims",
                "ordering": ["-submission_date"],
            },
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("payment_number", models.CharField(max_length=50, unique=True)),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                    ),
                ),
                (
                    "payment_method",
                    models.CharField(
                        choices=[
                            ("cash", "Cash"),
                            ("check", "Check"),
                            ("credit_card", "Credit Card"),
                            ("debit_card", "Debit Card"),
                            ("bank_transfer", "Bank Transfer"),
                            ("insurance", "Insurance Payment"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                ("payment_date", models.DateTimeField()),
                ("transaction_id", models.CharField(blank=True, max_length=100)),
                ("reference_number", models.CharField(blank=True, max_length=100)),
                ("processor_response", models.JSONField(blank=True, default=dict)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                            ("refunded", "Refunded"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "invoice",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payments",
                        to="billing.invoice",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payments",
                        to="accounts.enhancedpatient",
                    ),
                ),
                (
                    "processed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="processed_payments",
                        to="accounts.enhancedstaffprofile",
                    ),
                ),
            ],
            options={
                "db_table": "payments",
                "ordering": ["-payment_date"],
            },
        ),
        migrations.CreateModel(
            name="PaymentPlan",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("plan_number", models.CharField(max_length=50, unique=True)),
                (
                    "total_amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                    ),
                ),
                (
                    "down_payment",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                (
                    "monthly_payment",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                    ),
                ),
                ("number_of_payments", models.PositiveIntegerField()),
                ("start_date", models.DateField()),
                ("first_payment_date", models.DateField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("completed", "Completed"),
                            ("defaulted", "Defaulted"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                (
                    "interest_rate",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00")),
                            django.core.validators.MaxValueValidator(Decimal("100.00")),
                        ],
                    ),
                ),
                (
                    "late_fee",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=8,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "invoice",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payment_plans",
                        to="billing.invoice",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payment_plans",
                        to="accounts.enhancedpatient",
                    ),
                ),
            ],
            options={
                "db_table": "payment_plans",
                "ordering": ["-start_date"],
            },
        ),
        migrations.CreateModel(
            name="PaymentPlanInstallment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("installment_number", models.PositiveIntegerField()),
                ("due_date", models.DateField()),
                (
                    "amount_due",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                    ),
                ),
                (
                    "amount_paid",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("paid", "Paid"),
                            ("overdue", "Overdue"),
                            ("waived", "Waived"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("paid_date", models.DateField(blank=True, null=True)),
                (
                    "late_fee_assessed",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=8,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "payment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="installments",
                        to="billing.payment",
                    ),
                ),
                (
                    "payment_plan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="installments",
                        to="billing.paymentplan",
                    ),
                ),
            ],
            options={
                "db_table": "payment_plan_installments",
                "ordering": ["payment_plan", "installment_number"],
            },
        ),
        migrations.CreateModel(
            name="ServiceCode",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("code", models.CharField(max_length=20, unique=True)),
                (
                    "code_type",
                    models.CharField(
                        choices=[
                            ("cpt", "CPT Code"),
                            ("hcpcs", "HCPCS Code"),
                            ("icd10_pcs", "ICD-10-PCS"),
                            ("custom", "Custom Service"),
                        ],
                        max_length=20,
                    ),
                ),
                ("description", models.CharField(max_length=500)),
                ("category", models.CharField(blank=True, max_length=100)),
                (
                    "base_price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                (
                    "work_rvu",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        help_text="Work Relative Value Units",
                        max_digits=8,
                        null=True,
                    ),
                ),
                (
                    "practice_expense_rvu",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=8, null=True
                    ),
                ),
                (
                    "malpractice_rvu",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=8, null=True
                    ),
                ),
                ("requires_modifier", models.BooleanField(default=False)),
                (
                    "billable_units",
                    models.CharField(
                        default="1",
                        help_text="Default billable units (e.g., '1', 'per hour', 'per session')",
                        max_length=50,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("effective_date", models.DateField()),
                ("expiration_date", models.DateField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "service_codes",
                "ordering": ["code"],
                "indexes": [
                    models.Index(fields=["code"], name="service_cod_code_66ead7_idx"),
                    models.Index(
                        fields=["code_type"], name="service_cod_code_ty_4dba4a_idx"
                    ),
                    models.Index(
                        fields=["category"], name="service_cod_categor_79e993_idx"
                    ),
                    models.Index(
                        fields=["is_active"], name="service_cod_is_acti_777dd1_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="InvoiceLineItem",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("description", models.CharField(max_length=500)),
                (
                    "quantity",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("1.00"),
                        max_digits=8,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                    ),
                ),
                (
                    "unit_price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                (
                    "total_amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                ("modifier_codes", models.JSONField(blank=True, default=list)),
                ("diagnosis_codes", models.JSONField(blank=True, default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "invoice",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="line_items",
                        to="billing.invoice",
                    ),
                ),
                (
                    "service_code",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="invoice_line_items",
                        to="billing.servicecode",
                    ),
                ),
            ],
            options={
                "db_table": "invoice_line_items",
                "ordering": ["id"],
            },
        ),
        migrations.AddIndex(
            model_name="invoice",
            index=models.Index(
                fields=["patient", "invoice_date"], name="invoices_patient_2f7b26_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="invoice",
            index=models.Index(
                fields=["invoice_number"], name="invoices_invoice_7778bc_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="invoice",
            index=models.Index(fields=["status"], name="invoices_status_07776b_idx"),
        ),
        migrations.AddIndex(
            model_name="invoice",
            index=models.Index(
                fields=["payment_status"], name="invoices_payment_904d3d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="invoice",
            index=models.Index(fields=["due_date"], name="invoices_due_dat_039a25_idx"),
        ),
        migrations.AddIndex(
            model_name="insuranceclaim",
            index=models.Index(
                fields=["patient", "submission_date"],
                name="insurance_c_patient_9ba639_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="insuranceclaim",
            index=models.Index(
                fields=["insurance_provider", "submission_date"],
                name="insurance_c_insuran_539785_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="insuranceclaim",
            index=models.Index(
                fields=["claim_number"], name="insurance_c_claim_n_6e8b18_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="insuranceclaim",
            index=models.Index(fields=["status"], name="insurance_c_status_0f3899_idx"),
        ),
        migrations.AddIndex(
            model_name="insuranceclaim",
            index=models.Index(
                fields=["claim_type"], name="insurance_c_claim_t_fc6ad6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="payment",
            index=models.Index(
                fields=["invoice", "payment_date"], name="payments_invoice_5450b9_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="payment",
            index=models.Index(
                fields=["patient", "payment_date"], name="payments_patient_3ac440_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="payment",
            index=models.Index(
                fields=["payment_number"], name="payments_payment_c27a96_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="payment",
            index=models.Index(fields=["status"], name="payments_status_d621e5_idx"),
        ),
        migrations.AddIndex(
            model_name="payment",
            index=models.Index(
                fields=["payment_method"], name="payments_payment_ee488d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="paymentplan",
            index=models.Index(
                fields=["patient", "start_date"], name="payment_pla_patient_8c2454_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="paymentplan",
            index=models.Index(
                fields=["plan_number"], name="payment_pla_plan_nu_081670_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="paymentplan",
            index=models.Index(fields=["status"], name="payment_pla_status_a06390_idx"),
        ),
        migrations.AddIndex(
            model_name="paymentplaninstallment",
            index=models.Index(
                fields=["payment_plan", "due_date"],
                name="payment_pla_payment_41811c_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="paymentplaninstallment",
            index=models.Index(fields=["status"], name="payment_pla_status_e91817_idx"),
        ),
        migrations.AddIndex(
            model_name="paymentplaninstallment",
            index=models.Index(
                fields=["due_date"], name="payment_pla_due_dat_f7ad48_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="paymentplaninstallment",
            unique_together={("payment_plan", "installment_number")},
        ),
        migrations.AddIndex(
            model_name="invoicelineitem",
            index=models.Index(
                fields=["invoice"], name="invoice_lin_invoice_d51b23_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="invoicelineitem",
            index=models.Index(
                fields=["service_code"], name="invoice_lin_service_e0df24_idx"
            ),
        ),
    ]
