# Generated by Django 5.2.5 on 2025-09-12 14:50

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("accounts", "0001_initial"),
        ("appointments", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Diagnosis",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("icd10_code", models.CharField(max_length=10, unique=True)),
                ("description", models.CharField(max_length=500)),
                ("category", models.CharField(blank=True, max_length=100)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "diagnoses",
                "ordering": ["icd10_code"],
                "indexes": [
                    models.Index(
                        fields=["icd10_code"], name="diagnoses_icd10_c_632560_idx"
                    ),
                    models.Index(
                        fields=["category"], name="diagnoses_categor_182ac8_idx"
                    ),
                    models.Index(
                        fields=["is_active"], name="diagnoses_is_acti_bc99ec_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="MedicalRecord",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "record_type",
                    models.CharField(
                        choices=[
                            ("consultation", "Consultation"),
                            ("follow_up", "Follow-up"),
                            ("emergency", "Emergency"),
                            ("procedure", "Procedure"),
                            ("surgery", "Surgery"),
                            ("lab_review", "Lab Review"),
                            ("imaging_review", "Imaging Review"),
                            ("discharge", "Discharge Summary"),
                        ],
                        max_length=20,
                    ),
                ),
                ("visit_date", models.DateTimeField()),
                (
                    "chief_complaint",
                    models.TextField(help_text="Patient's main concern"),
                ),
                ("history_of_present_illness", models.TextField(blank=True)),
                ("review_of_systems", models.JSONField(blank=True, default=dict)),
                ("physical_examination", models.TextField(blank=True)),
                (
                    "vital_signs",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Blood pressure, heart rate, temperature, etc.",
                    ),
                ),
                (
                    "assessment",
                    models.TextField(blank=True, help_text="Clinical assessment"),
                ),
                ("plan", models.TextField(blank=True, help_text="Treatment plan")),
                ("follow_up_instructions", models.TextField(blank=True)),
                ("next_appointment_recommended", models.BooleanField(default=False)),
                (
                    "next_appointment_timeframe",
                    models.CharField(blank=True, max_length=100),
                ),
                ("is_finalized", models.BooleanField(default=False)),
                ("finalized_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "appointment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="medical_records",
                        to="appointments.appointment",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="medical_records",
                        to="accounts.enhancedpatient",
                    ),
                ),
                (
                    "primary_diagnosis",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="primary_records",
                        to="medical_records.diagnosis",
                    ),
                ),
                (
                    "provider",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="medical_records",
                        to="accounts.enhancedstaffprofile",
                    ),
                ),
                (
                    "secondary_diagnoses",
                    models.ManyToManyField(
                        blank=True,
                        related_name="secondary_records",
                        to="medical_records.diagnosis",
                    ),
                ),
            ],
            options={
                "db_table": "medical_records",
                "ordering": ["-visit_date"],
            },
        ),
        migrations.CreateModel(
            name="MedicalDocument",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("lab_report", "Lab Report"),
                            ("imaging", "Imaging Study"),
                            ("pathology", "Pathology Report"),
                            ("consultation_letter", "Consultation Letter"),
                            ("discharge_summary", "Discharge Summary"),
                            ("insurance_form", "Insurance Form"),
                            ("consent_form", "Consent Form"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("file", models.FileField(upload_to="medical_documents/%Y/%m/")),
                (
                    "file_size",
                    models.PositiveIntegerField(help_text="File size in bytes"),
                ),
                ("file_type", models.CharField(max_length=50)),
                ("document_date", models.DateField()),
                ("is_confidential", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="medical_documents",
                        to="accounts.enhancedpatient",
                    ),
                ),
                (
                    "uploaded_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="uploaded_documents",
                        to="accounts.enhancedstaffprofile",
                    ),
                ),
                (
                    "medical_record",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="documents",
                        to="medical_records.medicalrecord",
                    ),
                ),
            ],
            options={
                "db_table": "medical_documents",
                "ordering": ["-document_date"],
            },
        ),
        migrations.CreateModel(
            name="LabResult",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("test_name", models.CharField(max_length=200)),
                ("test_code", models.CharField(blank=True, max_length=50)),
                ("test_category", models.CharField(blank=True, max_length=100)),
                ("result_value", models.CharField(blank=True, max_length=200)),
                ("result_unit", models.CharField(blank=True, max_length=50)),
                ("reference_range", models.CharField(blank=True, max_length=200)),
                ("is_abnormal", models.BooleanField(default=False)),
                ("specimen_type", models.CharField(blank=True, max_length=100)),
                ("collection_date", models.DateTimeField()),
                ("result_date", models.DateTimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                            ("abnormal", "Abnormal - Requires Review"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                ("interpretation", models.TextField(blank=True)),
                ("lab_name", models.CharField(blank=True, max_length=200)),
                ("lab_reference_number", models.CharField(blank=True, max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "ordered_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ordered_lab_results",
                        to="accounts.enhancedstaffprofile",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lab_results",
                        to="accounts.enhancedpatient",
                    ),
                ),
                (
                    "reviewed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="reviewed_lab_results",
                        to="accounts.enhancedstaffprofile",
                    ),
                ),
                (
                    "medical_record",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="lab_results",
                        to="medical_records.medicalrecord",
                    ),
                ),
            ],
            options={
                "db_table": "lab_results",
                "ordering": ["-collection_date"],
            },
        ),
        migrations.CreateModel(
            name="ClinicalNote",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "note_type",
                    models.CharField(
                        choices=[
                            ("progress", "Progress Note"),
                            ("consultation", "Consultation Note"),
                            ("procedure", "Procedure Note"),
                            ("discharge", "Discharge Note"),
                            ("telephone", "Telephone Note"),
                            ("nursing", "Nursing Note"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("content", models.TextField()),
                ("note_date", models.DateTimeField()),
                ("is_confidential", models.BooleanField(default=False)),
                ("is_signed", models.BooleanField(default=False)),
                ("signed_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="clinical_notes",
                        to="accounts.enhancedstaffprofile",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="clinical_notes",
                        to="accounts.enhancedpatient",
                    ),
                ),
                (
                    "medical_record",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="clinical_notes",
                        to="medical_records.medicalrecord",
                    ),
                ),
            ],
            options={
                "db_table": "clinical_notes",
                "ordering": ["-note_date"],
            },
        ),
        migrations.CreateModel(
            name="Medication",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("generic_name", models.CharField(blank=True, max_length=200)),
                ("brand_names", models.JSONField(blank=True, default=list)),
                (
                    "medication_type",
                    models.CharField(
                        choices=[
                            ("brand", "Brand Name"),
                            ("generic", "Generic"),
                            ("compound", "Compound"),
                            ("otc", "Over-the-Counter"),
                        ],
                        max_length=20,
                    ),
                ),
                ("drug_class", models.CharField(blank=True, max_length=100)),
                (
                    "controlled_substance_schedule",
                    models.CharField(blank=True, max_length=10),
                ),
                ("active_ingredients", models.JSONField(blank=True, default=list)),
                ("strength_options", models.JSONField(blank=True, default=list)),
                ("dosage_forms", models.JSONField(blank=True, default=list)),
                ("contraindications", models.TextField(blank=True)),
                ("warnings", models.TextField(blank=True)),
                ("side_effects", models.JSONField(blank=True, default=list)),
                ("drug_interactions", models.JSONField(blank=True, default=list)),
                (
                    "ndc_number",
                    models.CharField(
                        blank=True, help_text="National Drug Code", max_length=20
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "medications",
                "ordering": ["name"],
                "indexes": [
                    models.Index(fields=["name"], name="medications_name_906f5e_idx"),
                    models.Index(
                        fields=["generic_name"], name="medications_generic_f22126_idx"
                    ),
                    models.Index(
                        fields=["drug_class"], name="medications_drug_cl_2be343_idx"
                    ),
                    models.Index(
                        fields=["is_active"], name="medications_is_acti_1348f5_idx"
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="medicalrecord",
            index=models.Index(
                fields=["patient", "visit_date"], name="medical_rec_patient_ec477f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="medicalrecord",
            index=models.Index(
                fields=["provider", "visit_date"], name="medical_rec_provide_9a307b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="medicalrecord",
            index=models.Index(
                fields=["record_type"], name="medical_rec_record__6b7b73_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="medicalrecord",
            index=models.Index(
                fields=["is_finalized"], name="medical_rec_is_fina_3f98be_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="medicaldocument",
            index=models.Index(
                fields=["patient", "document_date"],
                name="medical_doc_patient_d41397_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="medicaldocument",
            index=models.Index(
                fields=["document_type"], name="medical_doc_documen_0c9613_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="medicaldocument",
            index=models.Index(
                fields=["is_confidential"], name="medical_doc_is_conf_a5a1e0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="labresult",
            index=models.Index(
                fields=["patient", "collection_date"],
                name="lab_results_patient_9e2ba1_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="labresult",
            index=models.Index(
                fields=["test_name"], name="lab_results_test_na_4deeeb_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="labresult",
            index=models.Index(fields=["status"], name="lab_results_status_48502e_idx"),
        ),
        migrations.AddIndex(
            model_name="labresult",
            index=models.Index(
                fields=["is_abnormal"], name="lab_results_is_abno_efdeae_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="clinicalnote",
            index=models.Index(
                fields=["patient", "note_date"], name="clinical_no_patient_7093ef_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="clinicalnote",
            index=models.Index(
                fields=["author", "note_date"], name="clinical_no_author__0b5f86_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="clinicalnote",
            index=models.Index(
                fields=["note_type"], name="clinical_no_note_ty_54cd6d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="clinicalnote",
            index=models.Index(
                fields=["is_signed"], name="clinical_no_is_sign_0966d1_idx"
            ),
        ),
    ]
