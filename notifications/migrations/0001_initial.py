# Generated by Django 5.2.5 on 2025-09-23 11:59

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="PushSubscription",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("user_id", models.CharField(max_length=255)),
                ("endpoint", models.URLField(max_length=500)),
                ("p256dh", models.CharField(max_length=255)),
                ("auth", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["user_id"], name="notificatio_user_id_d7f78b_idx"
                    ),
                    models.Index(
                        fields=["endpoint"], name="notificatio_endpoin_498a4c_idx"
                    ),
                ],
                "unique_together": {("user_id", "endpoint")},
            },
        ),
        migrations.CreateModel(
            name="ScheduledTask",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "task_type",
                    models.CharField(
                        choices=[
                            ("reminder", "Appointment Reminder"),
                            ("confirmation", "Appointment Confirmation"),
                            ("update", "Appointment Update"),
                            ("cancellation", "Appointment Cancellation"),
                            ("no_show", "No Show Notification"),
                        ],
                        max_length=20,
                    ),
                ),
                ("appointment_id", models.UUIDField()),
                ("reminder_type", models.CharField(blank=True, max_length=50)),
                (
                    "delivery_method",
                    models.CharField(
                        choices=[
                            ("email", "Email"),
                            ("sms", "SMS"),
                            ("push", "Push Notification"),
                            ("whatsapp", "WhatsApp"),
                        ],
                        max_length=20,
                    ),
                ),
                ("scheduled_time", models.DateTimeField()),
                (
                    "priority",
                    models.IntegerField(
                        choices=[(0, "Urgent"), (1, "High"), (2, "Medium"), (3, "Low")],
                        default=2,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("retrying", "Retrying"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("retry_count", models.IntegerField(default=0)),
                ("max_retries", models.IntegerField(default=3)),
                ("error_message", models.TextField(blank=True, null=True)),
                ("message_data", models.JSONField(default=dict)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("last_attempt", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("cancelled_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "ordering": ["priority", "scheduled_time"],
                "indexes": [
                    models.Index(
                        fields=["status", "scheduled_time"],
                        name="notificatio_status_6817a6_idx",
                    ),
                    models.Index(
                        fields=["appointment_id", "status"],
                        name="notificatio_appoint_3354c9_idx",
                    ),
                    models.Index(
                        fields=["delivery_method", "status"],
                        name="notificatio_deliver_29f7b7_idx",
                    ),
                    models.Index(
                        fields=["priority", "scheduled_time"],
                        name="notificatio_priorit_4abfc8_idx",
                    ),
                    models.Index(
                        fields=["created_at"], name="notificatio_created_c8d00e_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="SchedulerStats",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(default=django.utils.timezone.now)),
                ("total_processed", models.IntegerField(default=0)),
                ("successful", models.IntegerField(default=0)),
                ("failed", models.IntegerField(default=0)),
                ("retried", models.IntegerField(default=0)),
                ("cancelled", models.IntegerField(default=0)),
                ("rate_limited", models.IntegerField(default=0)),
                ("circuit_breaker_trips", models.IntegerField(default=0)),
                ("avg_processing_time", models.FloatField(default=0.0)),
                ("max_queue_size", models.IntegerField(default=0)),
                ("max_concurrent_tasks", models.IntegerField(default=0)),
                ("email_sent", models.IntegerField(default=0)),
                ("sms_sent", models.IntegerField(default=0)),
                ("push_sent", models.IntegerField(default=0)),
                ("whatsapp_sent", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-date"],
                "indexes": [
                    models.Index(fields=["date"], name="notificatio_date_7ea0ee_idx"),
                    models.Index(
                        fields=["created_at"], name="notificatio_created_f92695_idx"
                    ),
                ],
                "unique_together": {("date",)},
            },
        ),
        migrations.CreateModel(
            name="NotificationLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("appointment_id", models.UUIDField()),
                ("patient_id", models.CharField(max_length=255)),
                ("provider_id", models.CharField(blank=True, max_length=255)),
                ("delivery_method", models.CharField(max_length=20)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("sent", "Sent Successfully"),
                            ("failed", "Failed"),
                            ("bounced", "Bounced"),
                            ("delivered", "Delivered"),
                            ("opened", "Opened"),
                            ("clicked", "Clicked"),
                        ],
                        max_length=20,
                    ),
                ),
                ("error_message", models.TextField(blank=True, null=True)),
                ("external_id", models.CharField(blank=True, max_length=255)),
                ("metadata", models.JSONField(default=dict)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("delivered_at", models.DateTimeField(blank=True, null=True)),
                ("opened_at", models.DateTimeField(blank=True, null=True)),
                ("clicked_at", models.DateTimeField(blank=True, null=True)),
                (
                    "task",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="logs",
                        to="notifications.scheduledtask",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["appointment_id", "created_at"],
                        name="notificatio_appoint_a7e765_idx",
                    ),
                    models.Index(
                        fields=["patient_id", "created_at"],
                        name="notificatio_patient_476586_idx",
                    ),
                    models.Index(
                        fields=["delivery_method", "status"],
                        name="notificatio_deliver_57d953_idx",
                    ),
                    models.Index(
                        fields=["created_at"], name="notificatio_created_01830a_idx"
                    ),
                    models.Index(
                        fields=["external_id"], name="notificatio_externa_ffaa18_idx"
                    ),
                ],
            },
        ),
    ]
