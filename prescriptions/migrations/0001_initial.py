# Generated by Django 5.2.5 on 2025-09-12 14:50

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("accounts", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="DrugCategory",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                ("code", models.CharField(max_length=20, unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name_plural": "Drug Categories",
                "db_table": "drug_categories",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Drug",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("generic_name", models.CharField(max_length=255)),
                (
                    "brand_names",
                    models.JSONField(default=list, help_text="List of brand names"),
                ),
                ("drug_class", models.CharField(blank=True, max_length=100)),
                (
                    "form",
                    models.CharField(
                        choices=[
                            ("tablet", "Tablet"),
                            ("capsule", "Capsule"),
                            ("liquid", "Liquid/Syrup"),
                            ("injection", "Injection"),
                            ("cream", "Cream/Ointment"),
                            ("drops", "Drops"),
                            ("inhaler", "Inhaler"),
                            ("patch", "Patch"),
                            ("suppository", "Suppository"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "strength",
                    models.CharField(help_text="e.g., 500mg, 10mg/ml", max_length=50),
                ),
                (
                    "unit",
                    models.CharField(help_text="mg, ml, units, etc.", max_length=20),
                ),
                (
                    "ndc_number",
                    models.CharField(
                        blank=True, help_text="National Drug Code", max_length=20
                    ),
                ),
                (
                    "schedule",
                    models.CharField(
                        choices=[
                            ("otc", "Over-the-Counter"),
                            ("rx", "Prescription"),
                            ("controlled_1", "Schedule I"),
                            ("controlled_2", "Schedule II"),
                            ("controlled_3", "Schedule III"),
                            ("controlled_4", "Schedule IV"),
                            ("controlled_5", "Schedule V"),
                        ],
                        default="rx",
                        max_length=20,
                    ),
                ),
                (
                    "indications",
                    models.TextField(help_text="What the drug is used for"),
                ),
                ("contraindications", models.TextField(blank=True)),
                ("side_effects", models.TextField(blank=True)),
                ("warnings", models.TextField(blank=True)),
                ("usual_adult_dose", models.TextField(blank=True)),
                ("usual_pediatric_dose", models.TextField(blank=True)),
                ("max_daily_dose", models.CharField(blank=True, max_length=100)),
                ("storage_requirements", models.TextField(blank=True)),
                (
                    "shelf_life_months",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "is_formulary",
                    models.BooleanField(
                        default=True, help_text="Available in formulary"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="drugs",
                        to="prescriptions.drugcategory",
                    ),
                ),
            ],
            options={
                "db_table": "drugs",
                "ordering": ["generic_name"],
            },
        ),
        migrations.CreateModel(
            name="DrugInteraction",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("minor", "Minor"),
                            ("moderate", "Moderate"),
                            ("major", "Major"),
                            ("contraindicated", "Contraindicated"),
                        ],
                        max_length=20,
                    ),
                ),
                ("description", models.TextField()),
                ("mechanism", models.TextField(blank=True)),
                ("management", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "drug_1",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="interactions_as_drug1",
                        to="prescriptions.drug",
                    ),
                ),
                (
                    "drug_2",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="interactions_as_drug2",
                        to="prescriptions.drug",
                    ),
                ),
            ],
            options={
                "db_table": "drug_interactions",
            },
        ),
        migrations.CreateModel(
            name="PharmacyPartner",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("chain_name", models.CharField(blank=True, max_length=255)),
                ("license_number", models.CharField(max_length=50, unique=True)),
                ("phone", models.CharField(max_length=20)),
                ("fax", models.CharField(blank=True, max_length=20)),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("website", models.URLField(blank=True)),
                ("address_line1", models.CharField(max_length=255)),
                ("address_line2", models.CharField(blank=True, max_length=255)),
                ("city", models.CharField(max_length=100)),
                ("state", models.CharField(max_length=50)),
                ("zip_code", models.CharField(max_length=20)),
                ("accepts_insurance", models.BooleanField(default=True)),
                ("delivery_available", models.BooleanField(default=False)),
                ("accepts_electronic_prescriptions", models.BooleanField(default=True)),
                (
                    "hours_of_operation",
                    models.JSONField(
                        default=dict, help_text="Operating hours by day of week"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_preferred", models.BooleanField(default=False)),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "pharmacy_partners",
                "ordering": ["name"],
                "indexes": [
                    models.Index(
                        fields=["license_number"], name="pharmacy_pa_license_907da8_idx"
                    ),
                    models.Index(
                        fields=["is_active", "is_preferred"],
                        name="pharmacy_pa_is_acti_7e0b36_idx",
                    ),
                    models.Index(
                        fields=["city", "state"], name="pharmacy_pa_city_cac3d5_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Prescription",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("prescription_number", models.CharField(max_length=50, unique=True)),
                ("dosage", models.CharField(help_text="e.g., 500mg", max_length=100)),
                (
                    "frequency",
                    models.CharField(
                        help_text="e.g., twice daily, every 8 hours", max_length=100
                    ),
                ),
                (
                    "route",
                    models.CharField(
                        help_text="e.g., oral, IV, topical", max_length=50
                    ),
                ),
                (
                    "duration",
                    models.CharField(help_text="e.g., 7 days, 2 weeks", max_length=100),
                ),
                (
                    "quantity",
                    models.PositiveIntegerField(
                        help_text="Number of units to dispense"
                    ),
                ),
                ("refills_allowed", models.PositiveIntegerField(default=0)),
                ("refills_remaining", models.PositiveIntegerField(default=0)),
                ("sig", models.TextField(help_text="Directions for use (Sig)")),
                ("indication", models.CharField(blank=True, max_length=255)),
                ("special_instructions", models.TextField(blank=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("active", "Active"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                            ("expired", "Expired"),
                            ("discontinued", "Discontinued"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("routine", "Routine"),
                            ("urgent", "Urgent"),
                            ("stat", "STAT"),
                        ],
                        default="routine",
                        max_length=20,
                    ),
                ),
                (
                    "prescribed_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                ("pharmacy", models.CharField(blank=True, max_length=255)),
                ("pharmacy_phone", models.CharField(blank=True, max_length=20)),
                (
                    "diagnosis_code",
                    models.CharField(
                        blank=True, help_text="ICD-10 code", max_length=20
                    ),
                ),
                ("is_generic_allowed", models.BooleanField(default=True)),
                ("is_controlled_substance", models.BooleanField(default=False)),
                ("requires_monitoring", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "drug",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="prescriptions",
                        to="prescriptions.drug",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="prescription_orders",
                        to="accounts.enhancedpatient",
                    ),
                ),
                (
                    "prescriber",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="prescription_orders",
                        to="accounts.enhancedstaffprofile",
                    ),
                ),
            ],
            options={
                "db_table": "prescription_orders",
                "ordering": ["-prescribed_date"],
            },
        ),
        migrations.CreateModel(
            name="MedicationReminder",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "frequency",
                    models.CharField(
                        choices=[
                            ("once_daily", "Once Daily"),
                            ("twice_daily", "Twice Daily"),
                            ("three_times_daily", "Three Times Daily"),
                            ("four_times_daily", "Four Times Daily"),
                            ("every_4_hours", "Every 4 Hours"),
                            ("every_6_hours", "Every 6 Hours"),
                            ("every_8_hours", "Every 8 Hours"),
                            ("every_12_hours", "Every 12 Hours"),
                            ("as_needed", "As Needed"),
                            ("custom", "Custom"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "times",
                    models.JSONField(
                        default=list,
                        help_text="List of times for reminders (HH:MM format)",
                    ),
                ),
                ("send_sms", models.BooleanField(default=False)),
                ("send_email", models.BooleanField(default=True)),
                ("send_push", models.BooleanField(default=True)),
                (
                    "advance_notice_minutes",
                    models.PositiveIntegerField(
                        default=0, help_text="Minutes before dose time to send reminder"
                    ),
                ),
                (
                    "snooze_minutes",
                    models.PositiveIntegerField(
                        default=15, help_text="Snooze duration in minutes"
                    ),
                ),
                (
                    "max_snoozes",
                    models.PositiveIntegerField(
                        default=3, help_text="Maximum number of snoozes allowed"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "prescription",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reminders",
                        to="prescriptions.prescription",
                    ),
                ),
            ],
            options={
                "db_table": "medication_reminders",
            },
        ),
        migrations.CreateModel(
            name="MedicationAdherence",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("period_start", models.DateField()),
                ("period_end", models.DateField()),
                ("doses_prescribed", models.PositiveIntegerField()),
                ("doses_taken", models.PositiveIntegerField()),
                (
                    "adherence_percentage",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                (
                    "adherence_rating",
                    models.CharField(
                        choices=[
                            ("excellent", "Excellent (>95%)"),
                            ("good", "Good (80-95%)"),
                            ("fair", "Fair (60-79%)"),
                            ("poor", "Poor (<60%)"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "tracking_method",
                    models.CharField(
                        choices=[
                            ("self_report", "Self Report"),
                            ("pill_count", "Pill Count"),
                            ("pharmacy_refill", "Pharmacy Refill"),
                            ("electronic_monitor", "Electronic Monitor"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "missed_dose_reasons",
                    models.JSONField(
                        default=list, help_text="Reasons for missed doses"
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "recorded_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="adherence_assessments",
                        to="accounts.enhancedstaffprofile",
                    ),
                ),
                (
                    "prescription",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="adherence_records",
                        to="prescriptions.prescription",
                    ),
                ),
            ],
            options={
                "db_table": "medication_adherence",
                "ordering": ["-period_end"],
            },
        ),
        migrations.CreateModel(
            name="PrescriptionFill",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("fill_number", models.PositiveIntegerField(default=1)),
                ("quantity_dispensed", models.PositiveIntegerField()),
                ("days_supply", models.PositiveIntegerField()),
                ("fill_date", models.DateTimeField(default=django.utils.timezone.now)),
                ("pickup_date", models.DateTimeField(blank=True, null=True)),
                ("pharmacy_name", models.CharField(max_length=255)),
                ("pharmacist_name", models.CharField(blank=True, max_length=255)),
                ("lot_number", models.CharField(blank=True, max_length=50)),
                (
                    "cost",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "copay",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("filled", "Filled"),
                            ("partial", "Partially Filled"),
                            ("cancelled", "Cancelled"),
                            ("returned", "Returned"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "prescription",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="fills",
                        to="prescriptions.prescription",
                    ),
                ),
            ],
            options={
                "db_table": "prescription_fills",
                "ordering": ["-fill_date"],
            },
        ),
        migrations.AddIndex(
            model_name="drug",
            index=models.Index(
                fields=["generic_name"], name="drugs_generic_b58053_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="drug",
            index=models.Index(fields=["category"], name="drugs_categor_8699de_idx"),
        ),
        migrations.AddIndex(
            model_name="drug",
            index=models.Index(fields=["schedule"], name="drugs_schedul_b02cd5_idx"),
        ),
        migrations.AddIndex(
            model_name="drug",
            index=models.Index(
                fields=["is_active", "is_formulary"], name="drugs_is_acti_cd4d03_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="druginteraction",
            index=models.Index(
                fields=["severity"], name="drug_intera_severit_66c99e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="druginteraction",
            index=models.Index(
                fields=["is_active"], name="drug_intera_is_acti_ed4451_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="druginteraction",
            unique_together={("drug_1", "drug_2")},
        ),
        migrations.AddIndex(
            model_name="prescription",
            index=models.Index(
                fields=["prescription_number"], name="prescriptio_prescri_e4370d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="prescription",
            index=models.Index(
                fields=["patient", "status"], name="prescriptio_patient_a02e9f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="prescription",
            index=models.Index(
                fields=["prescriber", "prescribed_date"],
                name="prescriptio_prescri_d2f9b8_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="prescription",
            index=models.Index(
                fields=["drug", "status"], name="prescriptio_drug_id_28fc4c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="prescription",
            index=models.Index(
                fields=["status", "prescribed_date"],
                name="prescriptio_status_7e31cb_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="medicationreminder",
            index=models.Index(
                fields=["prescription", "is_active"],
                name="medication__prescri_78cec7_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="medicationreminder",
            index=models.Index(
                fields=["frequency"], name="medication__frequen_888dd6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="medicationadherence",
            index=models.Index(
                fields=["prescription", "period_end"],
                name="medication__prescri_738fc9_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="medicationadherence",
            index=models.Index(
                fields=["adherence_rating"], name="medication__adheren_03cc06_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="prescriptionfill",
            index=models.Index(
                fields=["prescription", "fill_date"],
                name="prescriptio_prescri_f890f5_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="prescriptionfill",
            index=models.Index(
                fields=["status", "fill_date"], name="prescriptio_status_dd4ea2_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="prescriptionfill",
            unique_together={("prescription", "fill_number")},
        ),
    ]
